#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[var]
fifo.fifo = "on"
guile.check_license = "on"
javascript.check_license = "off"
lua.check_license = "on"
perl.beep.beep_command_dcc = "$bell"
perl.beep.beep_command_highlight = "$bell"
perl.beep.beep_command_pv = "$bell"
perl.beep.beep_command_timeout = "30000"
perl.beep.beep_dcc = "on"
perl.beep.beep_highlight = "on"
perl.beep.beep_highlight_blacklist = "off"
perl.beep.beep_highlight_whitelist = "off"
perl.beep.beep_pv = "on"
perl.beep.beep_pv_blacklist = "off"
perl.beep.beep_pv_whitelist = "off"
perl.beep.beep_trigger_highlight = ""
perl.beep.beep_trigger_pv = ""
perl.beep.bell_always = ""
perl.beep.blacklist_nicks = ""
perl.beep.whitelist_channels = ""
perl.beep.whitelist_nicks = ""
perl.chanmon.alignment = "channel"
perl.chanmon.bar_lines = "2"
perl.chanmon.color_buf = "on"
perl.chanmon.dbchat.#spoilers = "off"
perl.chanmon.dynamic = "on"
perl.chanmon.first_run = "true"
perl.chanmon.logging = "off"
perl.chanmon.merge_private = "off"
perl.chanmon.nick_prefix = "<"
perl.chanmon.nick_suffix = ">"
perl.chanmon.output = "bar"
perl.chanmon.short_names = "on"
perl.chanmon.show_aways = "off"
perl.chanmon.twitch-dbvst.#desertbus = "off"
perl.chanmon.twitch-dbvst.#loadingreadyrun = "off"
perl.chanmon.twitch.#desertbus = "off"
perl.check_license = "on"
perl.colorize_lines.avail_buffer = "all"
perl.colorize_lines.blacklist_buffers = ""
perl.colorize_lines.blacklist_channels = ""
perl.colorize_lines.buffer_autoset = "off"
perl.colorize_lines.buffers = "all"
perl.colorize_lines.chat = "on"
perl.colorize_lines.highlight = "on"
perl.colorize_lines.hotlist_max_level_nicks_add = "off"
perl.colorize_lines.ignore_tags = "irc_ctcp"
perl.colorize_lines.lines = "on"
perl.colorize_lines.look_highlight = "off"
perl.colorize_lines.look_highlight_regex = "off"
perl.colorize_lines.nicks = ""
perl.colorize_lines.own_lines = "only"
perl.colorize_lines.shuffle = "off"
perl.colorize_lines.tags = "irc_privmsg"
perl.curiousignore.blacklist = "desertbus.#desertbus.Carl_Miller,chatspike.#DesertBusBunker.Carl_Miller"
perl.curiousignore.cloaked_text = "<text cloaked>"
perl.curiousignore.cloaked_text_reply = "<text cloaked>"
perl.curiousignore.ignore_tags = ""
perl.curiousignore.rapid_fire = "on"
perl.curiousignore.tags = "irc_privmsg,irc_notice"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.bar_lines = "10"
perl.highmon.bar_scrolldown = "on"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "on"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.kickban.banmask = "u,h"
perl.kickban.kick_first = "on"
perl.kickban.kick_reason = ""
perl.kickban.time = "0"
perl.pushover.blacklist = ""
perl.pushover.enabled = "on"
perl.pushover.nma_apikey = ""
perl.pushover.only_if_away = "off"
perl.pushover.only_if_inactive = "off"
perl.pushover.pb_apikey = ""
perl.pushover.pb_device_iden = ""
perl.pushover.priority = ""
perl.pushover.rate_limit = "0"
perl.pushover.redact_priv_msg = "off"
perl.pushover.service = "pushbullet"
perl.pushover.short_name = "off"
perl.pushover.show_highlights = "on"
perl.pushover.show_priv_msg = "on"
perl.pushover.sound = ""
perl.pushover.token = ""
perl.pushover.user = ""
perl.pushover.verbose = "1"
perl.spell_menu.complete_near = "off"
perl.spell_menu.complete_noend = "off"
perl.spell_menu.no_complete = "off"
perl.strmon.default_bg_color = "#fff0d7"
perl.strmon.default_chanel_color = "brown"
perl.strmon.default_fg_color = "black"
perl.strmon.default_nick_color = "blue"
perl.strmon.default_picture = "default.png"
perl.strmon.default_sound = "default.ogg"
perl.strmon.filternicks = ""
perl.strmon.filtertags = "irc_join,irc_part,irc_quit,away_info"
perl.strmon.globalmode = "normal"
perl.strmon.highlights = "on:normal"
perl.strmon.monitorbuf = ""
perl.strmon.monitornicks = "bidbot:normal"
perl.strmon.monitortags = "notify_private:normal"
perl.strmon.notifo_secret = "nosecret"
perl.strmon.notifo_user = "nouser"
perl.strmon.notifyport = "9867"
perl.strmon.usedaemon = "off"
perl.strmon.usenotifo = "off"
perl.sysinfo.baritems = "memory"
perl.sysinfo.color = "default"
perl.sysinfo.nic = ""
perl.sysinfo.nicname = ""
perl.sysinfo.refresh = "0"
perl.sysinfo.showbattery = "off"
perl.sysinfo.showcpu = "on"
perl.sysinfo.showdiskusage = "on"
perl.sysinfo.showdistro = "on"
perl.sysinfo.showhostname = "on"
perl.sysinfo.showloadaverage = "on"
perl.sysinfo.showmemoryusage = "on"
perl.sysinfo.shownetworktraffic = "off"
perl.sysinfo.showos = "on"
perl.sysinfo.showprocesses = "on"
perl.sysinfo.showuptime = "on"
perl.sysinfo.showusers = "on"
perl.sysinfo.text_battery = "Battery: "
perl.sysinfo.text_color = "default"
perl.sysinfo.text_cpu = "CPU: "
perl.sysinfo.text_diskusage = "Disk Usage: "
perl.sysinfo.text_distro = "Distro: "
perl.sysinfo.text_dummy = "-"
perl.sysinfo.text_hostname = "Host: "
perl.sysinfo.text_loadaverage = "Load Average: "
perl.sysinfo.text_memoryusage = "Memory Usage: "
perl.sysinfo.text_network = "Network: "
perl.sysinfo.text_os = "OS: "
perl.sysinfo.text_processes = "Processes: "
perl.sysinfo.text_uptime = "Uptime: "
perl.sysinfo.text_users = "Users: "
perl.sysinfo.useshorthostname = "on"
perl.topicsed.color_message = "green"
perl.topicsed.message = "edit Topic: "
python.autojoin.autosave = "on"
python.bandwidth.device = "eth0"
python.bandwidth.format = "%N(↓%DV%DU/s ↑%UV%UU/s)"
python.bandwidth.refresh_rate = "5"
python.bandwidth.separator = " "
python.bitlbee_typing_notice.channel = "&bitlbee"
python.bitlbee_typing_notice.server = "bitlbee"
python.bitlbee_typing_notice.timeout = "4"
python.bufsize.count_filtered_lines = "on"
python.bufsize.format = "${color:yellow}%P${color:default}⋅%{${color:yellow}%A${color:default}⇵${color:yellow}%C${color:default}/}${color:yellow}%L"
python.check_license = "on"
python.colorize_nicks.blacklist_channels = ""
python.colorize_nicks.blacklist_nicks = "so,root"
python.colorize_nicks.colorize_input = "off"
python.colorize_nicks.greedy_matching = "on"
python.colorize_nicks.ignore_tags = ""
python.colorize_nicks.min_nick_length = "2"
python.go.auto_jump = "off"
python.go.color_name = "black,cyan"
python.go.color_name_highlight = "red,cyan"
python.go.color_name_highlight_selected = "red,brown"
python.go.color_name_selected = "black,brown"
python.go.color_number = "yellow,magenta"
python.go.color_number_selected = "yellow,red"
python.go.fuzzy_search = "off"
python.go.message = "Go to: "
python.go.short_name = "off"
python.go.sort = "number,beginning"
python.go.use_core_instead_weechat = "off"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.grep_filter.bar_item = "grep"
python.grep_filter.enable = "off"
python.gweather.city = "London"
python.gweather.format = "%C: %D%U, %O"
python.gweather.interval = "10"
python.gweather.language = "en"
python.gweather.output_color = "white"
python.gweather.timeout = "10"
python.gweather.unit = "C"
python.keepnick.command = "/nick %s"
python.keepnick.delay = "600"
python.keepnick.nickserv = "/msg -server $server NICKSERV IDENTIFY $passwd"
python.keepnick.serverlist = ""
python.keepnick.text = "Nickstealer left Network: %s!"
python.keepnick.timeout = "60"
python.logsize.display = "length"
python.logsize.file_not_found = ""
python.logsize.log_disabled = ""
python.logsize.refresh = "60"
python.logsize.size = "MB"
python.slack_extension.channels_not_on_current_server_color = "0"
python.slack_extension.colorize_nicks = "1"
python.slack_extension.debug_mode = ""
python.slack_extension.distracting_channels = ""
python.slack_extension.slack_api_token = "INSERT VALID KEY HERE!"
python.slack_extension.switch_buffer_on_join = "1"
python.slack_extension.trigger_value = "0"
python.slack_extension.unfurl_ignore_alt_text = "0"
python.spell_correction.auto_pop_up_item = "off"
python.spell_correction.auto_replace = "on"
python.spell_correction.catch_input_completion = "on"
python.spell_correction.complete_near = "3"
python.spell_correction.eat_input_char = "on"
python.spell_correction.hide_single_dict = "on"
python.spell_correction.replace_mode = "on"
python.spell_correction.suggest_item = "${white}%S${default}"
python.text_item.nick = "channel ${nick}"
python.title.current_buffer_prefix = ""
python.title.current_buffer_suffix = ""
python.title.hotlist_buffer_prefix = ""
python.title.hotlist_buffer_suffix = ""
python.title.hotlist_number_prefix = ""
python.title.hotlist_number_suffix = ""
python.title.hotlist_separator = ":"
python.title.short_name = "on"
python.title.title_prefix = "[WeeChat ${info:version}] "
python.title.title_priority = "2"
python.title.title_suffix = ""
python.twitch.prefix_nicks = "1"
python.twitch.servers = "twitch,twitch-dbvst,twitch-garrus"
python.typing_counter.format = "%L"
python.typing_counter.max_chars = "200"
python.typing_counter.sms_buffer = "bitlbee.sms"
python.typing_counter.start_cursor_pos_at_zero = "off"
python.typing_counter.tweet_buffer = "bitlbee.#tweet"
python.typing_counter.warn = "140"
python.typing_counter.warn_colour = "red"
python.typing_counter.warn_command = ""
python.update_notifier.color_countdown = "red"
python.update_notifier.color_default = "default"
python.update_notifier.git_compile_location = ""
python.update_notifier.git_pull = "false"
python.update_notifier.next_stable_text = "%d day(s) left to version %s"
python.update_notifier.start_countdown = "10"
python.update_notifier.update_text = "New devel version available"
python.update_notifier.update_text_stable = "New stable version %s available"
python.update_notifier.uses_devel = "false"
python.update_notifier.uses_git = "false"
python.urlbar.ignore = "grep"
python.urlbar.remember_amount = "25"
python.urlbar.show_buffername = "on"
python.urlbar.show_index = "on"
python.urlbar.show_nick = "on"
python.urlbar.show_timestamp = "on"
python.urlbar.time_format = "%H:%M"
python.urlbar.use_popup = "off"
python.urlbar.visible_amount = "5"
python.urlbar.visible_seconds = "5"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = "Tyranic-Moron:wH1T1LlRu"
python.urlserver.http_auth_redirect = "on"
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = "tyranicmoron.uk"
python.urlserver.http_hostname_display = ""
python.urlserver.http_open_in_new_page = "on"
python.urlserver.http_port = "41236"
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = "morbo"
python.urlserver.msg_filtered = "off"
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "40"
python.urlserver.urls_amount = "100"
python.weetweet.alt_rt_style = "off"
python.weetweet.auth_complete = "off"
python.weetweet.home_replies = "off"
python.weetweet.last_id = ""
python.weetweet.oauth_secret = ""
python.weetweet.oauth_token = ""
python.weetweet.index_length = "2"
python.weetweet.print_id = "on"
python.weetweet.screen_name = ""
python.weetweet.tweet_nicks = "on"
ruby.check_license = "on"
tcl.check_license = "on"

[desc]
perl.beep.beep_command_dcc = "command for beep on dcc, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_highlight = "command for beep on highlight, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_pv = "command for beep on private message, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_timeout = "timeout for command run (in milliseconds, 0 = never kill (not recommended)) (default: "30000")"
perl.beep.beep_dcc = "beep on dcc (default: "on")"
perl.beep.beep_highlight = "beep on highlight (default: "on")"
perl.beep.beep_highlight_blacklist = "turn blacklist for highlights on or off (default: "off")"
perl.beep.beep_highlight_whitelist = "turn whitelist for highlights on or off (default: "off")"
perl.beep.beep_pv = "beep on private message (default: "on")"
perl.beep.beep_pv_blacklist = "turn blacklist for private messages on or off (default: "off")"
perl.beep.beep_pv_whitelist = "turn whitelist for private messages on or off (default: "off")"
perl.beep.beep_trigger_highlight = "word that will trigger execution of beep_command_highlight (if empty, anything will trigger) (default: "")"
perl.beep.beep_trigger_pv = "word that will trigger execution of beep_command_pv (it empty, anything will trigger) (default: "")"
perl.beep.bell_always = "use $bell on private messages and/or highlights regardless of trigger and whitelist settings (example: "pv,highlight") (default: "")"
perl.beep.blacklist_nicks = "comma-separated list of "server.nick": if not empty, these nicks will not be able to trigger execution of commands. Cannot be used in conjuction with whitelist (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.beep.whitelist_channels = "comma-separated list of "server.#channel": if not empty, only these channels will trigger execution of commands (example: "freenode.#weechat,freenode.#channel2") (default: "")"
perl.beep.whitelist_nicks = "comma-separated list of "server.nick": if not empty, only these nicks will trigger execution of commands (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.colorize_lines.avail_buffer = "messages will be colored in buffer (all = all buffers, channel = channel buffers, query = query buffers (default: all "
perl.colorize_lines.blacklist_buffers = "comma-separated list of channels to be ignored (e.g. freenode.#weechat,*.#python)"
perl.colorize_lines.blacklist_channels = "comma separated list with channelname. Channels in this list will be completely ignored. (e.g.: freenode.#weechat,freenode.#weechat-fr). This option has highest priority!"
perl.colorize_lines.buffer_autoset = "toggle highlight color in chat area for value in "buffer_autoset.*.highlight_words_add" (default: off)"
perl.colorize_lines.buffers = "buffer type affected by the script (all/channel/query, default: all)"
perl.colorize_lines.chat = "colors text in chat area with according nick color (default: on)"
perl.colorize_lines.highlight = "highlight message will be fully highlighted in chat area ("on" = only messages from your buddies will be mind (using "plugins.var.perl.colorize_lines.nicks); "off" = message will not be highlighted; "always" = a highlight will always color the whole message (default: on)"
perl.colorize_lines.hotlist_max_level_nicks_add = "toggle highlight for hotlist (default: off)"
perl.colorize_lines.ignore_tags = "Comma-separated list of tags to ignore (see /debug tags)"
perl.colorize_lines.lines = "apply nickname color to the lines (off/on/nicks). the latter will limit highlighting to nicknames in option 'nicks'"
perl.colorize_lines.look_highlight = "toggle highlight color in chat area for value in option "weechat.look.highlight" (default: off)"
perl.colorize_lines.look_highlight_regex = "toggle highlight color in chat area for value in option "weechat.look.highlight_regex" (default: off)"
perl.colorize_lines.nicks = "comma separated list with nicknames. Only messages from nicks in this list will be colorized. (e.g.: freenode.nils_2,freenode.flashcode,freenode.weebot). You can use "*" as a wildcard (e.g.: *.nils_* to match all "nils_" on all servers). Also a file with nicks is allowed. The filename in option has to start with "/" (e.g.: /buddylist.txt). The format has to be, one nick each line with <servername>.<nickname>"
perl.colorize_lines.own_lines = "messages written by your own will be colored. color from "weechat.color.chat_nick_self" will be used. If you only want to color your lines, use value "only" (default: off)"
perl.colorize_lines.shuffle = "toggle shuffle color mode for chat area (you don't want this, believe me!) (default: off)"
perl.colorize_lines.tags = "Comma-separated list of tags to accept (see /debug tags)"
perl.curiousignore.blacklist = "comma separated list of nicks to be cloaked. format: server.#channel.nick (default: "")"
perl.curiousignore.cloaked_text = "text that will be displayed in buffer. if no text is given, the message will be discard (default: "text cloaked")"
perl.curiousignore.cloaked_text_reply = "text that will be displayed in buffer for an reply of a cloaked nick. if no text is given, the message will be discard. Own written messages will be displayed (default: "reply to cloaked text")"
perl.curiousignore.ignore_tags = "Comma-separated list of message tags that you don't want to be cloaked (default: "")"
perl.curiousignore.rapid_fire = "displays cloaked text only once, even nick sends several messages (default: "on")"
perl.curiousignore.tags = "Comma-separated list of message tags that you want to be cloaked (default: "irc_privmsg,irc_notice")"
perl.kickban.banmask = "mask used for banning, default: u,h (*!user@host)"
perl.kickban.kick_first = "kick before ban (default: on)"
perl.kickban.kick_reason = "default kick reason"
perl.kickban.time = "time in minutes to unban after banning, 0=never (default)"
perl.pushover.blacklist = "Comma separated list of buffers (full name) to blacklist for notifications (wildcard "*" is allowed, name beginning with "!" is excluded) (default: "")"
perl.pushover.enabled = "Turn script on or off (default: "on")"
perl.pushover.nma_apikey = "nma API key (default: "")"
perl.pushover.only_if_away = "Notify only if away status is active (default: "off")"
perl.pushover.only_if_inactive = "Notify only if buffer is not the active (current) buffer (default: "off")"
perl.pushover.pb_apikey = "Pushbullet API key (default: "")"
perl.pushover.pb_device_iden = "Device Iden of pushbullet device (default: "")"
perl.pushover.priority = "priority (empty for default) (default: "")"
perl.pushover.rate_limit = "Rate limit in seconds (0 = unlimited), will send a maximum of 1 notification per time limit (default: "0")"
perl.pushover.redact_priv_msg = "When receiving private message notifications, hide the actual message text (default: "off")"
perl.pushover.service = "Notification service to use. Multiple services may be supplied as comma separated list. (supported services: pushover, nma, pushbullet) (default: "pushover")"
perl.pushover.short_name = "Use short buffer name in notification (default: "off")"
perl.pushover.show_highlights = "Notify on highlights (default: "on")"
perl.pushover.show_priv_msg = "Notify on private messages (default: "on")"
perl.pushover.sound = "Sound (empty for default) (default: "")"
perl.pushover.token = "pushover API token/key (You may feel free to use your own token, so you get your own monthly quota of messages without being affected by other users. See also: https://pushover.net/faq#overview-distribution ) (default: "ajEX9RWhxs6NgeXFJxSK2jmpY54C9S")"
perl.pushover.user = "pushover user key (default: "")"
perl.pushover.verbose = "Verbosity level (0 = silently ignore any errors, 1 = display brief error, 2 = display full server response) (default: "1")"
perl.spell_menu.complete_near = "only use tab complete to open the menu if the cursor is next to the wrong word"
perl.spell_menu.complete_noend = "don't spell correct with tab if exactly at the end of a word"
perl.spell_menu.no_complete = "don't open the spell menu on tab completion. make a binding yourself to call /spell_menu, for example"
perl.sysinfo.baritems = "comma separated list with name(s) of systeminformation to be displayed in a bar"
perl.sysinfo.color = "color for optionsname"
perl.sysinfo.nic = "comma separated list to specify your NIC interface name(s) (wlan0,eth0,etc)"
perl.sysinfo.nicname = "comma separated list with name(s) for interface(s) (wireless,cable,etc)"
perl.sysinfo.refresh = "refresh rate in seconds for info-bar (0 means off)"
perl.sysinfo.text_color = "text color for results"
perl.sysinfo.text_dummy = "separator between different options"
python.bandwidth.device = "Network interface(s) to monitor, in order, separated by ';'"
python.bandwidth.format = "Output formatting: %N = network interface, %DV = downstream value, %DU = downstream units (K or M), %UV = upstream value, %UU = upstream units (K or M).  Note: default setting uses UTF-8"
python.bandwidth.refresh_rate = "Refresh rate in seconds"
python.bandwidth.separator = "String displayed between output for multiple devices"
python.bufsize.count_filtered_lines = "filtered lines will be count in item. (default: 'on')"
python.bufsize.format = "format for items to display in bar, possible items: %P = percent indicator, %A = number of lines below last line, %L = lines counter, %C = current line %F = number of filtered lines (note: using WeeChat >= 0.4.2, content is evaluated, so you can use colors with format "${color:xxx}", see /help eval) (default: '${color:yellow}%P${color:default}⋅%{${color:yellow}%A${color:default}⇵${color:yellow}%C${color:default}/}${color:yellow}%L')"
python.go.auto_jump = "automatically jump to buffer when it is uniquely selected (default: "off")"
python.go.color_name = "color for buffer name (not selected) (default: "black,cyan")"
python.go.color_name_highlight = "color for highlight in buffer name (not selected) (default: "red,cyan")"
python.go.color_name_highlight_selected = "color for highlight in a selected buffer name (default: "red,brown")"
python.go.color_name_selected = "color for a selected buffer name (default: "black,brown")"
python.go.color_number = "color for buffer number (not selected) (default: "yellow,magenta")"
python.go.color_number_selected = "color for selected buffer number (default: "yellow,red")"
python.go.fuzzy_search = "search buffer matches using approximation (default: "off")"
python.go.message = "message to display before list of buffers (default: "Go to: ")"
python.go.short_name = "display and search in short names instead of buffer name (default: "off")"
python.go.sort = "comma-separated list of keys to sort buffers (the order is important, sorts are performed in the given order): name = sort by name (or short name),  (default: "number,beginning")"
python.go.use_core_instead_weechat = "use name "core" instead of "weechat" for core buffer (default: "off")"
python.grep_filter.bar_item = "text to show in bar item when filtering (default: "grep")"
python.grep_filter.enable = "enable automatically start filtering when searching (default: "off")"
python.keepnick.command = "This command will be used to rename your nick ("%s" will be filled with your nickname for specific server) (default: "/nick %s")"
python.keepnick.delay = "delay (in seconds) to look at occupied nick (0 means OFF). It is not recommended to flood the server with /ison requests) (default: "600")"
python.keepnick.nickserv = "Use SASL authentification, if possible. This command will be used to IDENTIFY you on server (following placeholder can be used: "$server" for servername; "$passwd" for password. The password will be stored in a separate option for every single server: "plugins.var.python.keepnick.<servername>.password"). Using the "/secure" function, you'll have to add a format described in "/help secure" to password option (eg: ${sec.data.keepnick_freenode_password}) (default: "/msg -server $server NICKSERV IDENTIFY $passwd")"
python.keepnick.serverlist = "comma separated list of servers to look at. Try to register a nickname on server (see: /msg NickServ help).regular expression are allowed (eg. ".*" = matches ALL server,"freen.*" = matches freenode, freenet....) (default: "")"
python.keepnick.text = "text that will be displayed if your nick will not be occupied anymore. ("%s" is a placeholder for the servername) (default: "Nickstealer left Network: %s!")"
python.keepnick.timeout = "timeout (in seconds) to wait for an answer from server. (default: "60")"
python.logsize.display = "could be "length", "lines" or "both". CAVE: Use display option "lines" very carefully, large logfiles can stall the script and weechat!!! (default: "length")"
python.logsize.file_not_found = "displays a text in item, when logfile wasn't found (default: "")"
python.logsize.log_disabled = "displays a text in item, when logger is disabled for buffer (default: "")"
python.logsize.refresh = "refresh timer (in seconds) (default: "60")"
python.logsize.size = "display length in KB/MB/GB/TB. Leave option empty for byte (default: "KB")"
python.spell_correction.auto_pop_up_item = "automatic pop-up suggestion item on a misspelled word (default: "off")"
python.spell_correction.auto_replace = "replaces misspelled word with selected suggestion, automatically. If you use "off" you will have to bind command "/spell_correction replace" to a key (default: "on")"
python.spell_correction.catch_input_completion = "will catch the input_complete commands [TAB-key] (default: "on")"
python.spell_correction.complete_near = "show suggestions item only if you are n-chars near the misspelled word (0 = off). Using 'replace_mode' cursor has to be n-chars near misspelled word to cycle through suggestions. (default: "0")"
python.spell_correction.eat_input_char = "will eat the next char you type, after replacing a misspelled word (default: "on")"
python.spell_correction.hide_single_dict = "will hide dict in item if you have a single dict for buffer only (default: "on")"
python.spell_correction.replace_mode = "misspelled word will be replaced directly by suggestions. Use option 'complete_near' to specify range and item 'spell_suggest' to show possible suggestions. (default: "off")"
python.spell_correction.suggest_item = "item format (%S = suggestion, %D = dict). Colors are allowed with format "${color}". note: since WeeChat 0.4.2 content is evaluated, see /help eval. (default: "${white}%S${default}")"
python.twitch.prefix_nicks = "Prefix nicks based on ircv3 tags for mods/subs, This can be cpu intensive on very active chats [1 for enabled, 0 for disabled]"
python.twitch.servers = "Name of server(s) which script will be active on, space seperated"
python.typing_counter.format = "item name to add in a bar is "tc". item format is: %P = cursor position, %L = input length, %R = reverse counting from max_chars, %C = displays how many chars are count over max_chars (default: "[%P|%L|<%R|%C>]")"
python.typing_counter.max_chars = "max number of chars to count reverse (default: "200")"
python.typing_counter.sms_buffer = "name of sms buffer (using gtalksms). This is a comma separated list (default: "bitlbee.sms")"
python.typing_counter.start_cursor_pos_at_zero = "if option on, cursor position will start counting from zero instead of one (default: "off")"
python.typing_counter.tweet_buffer = "name of tweet buffer. This is a comma separated list (default: "bitlbee.#tweet")"
python.typing_counter.warn = "turns indicator to "warn_colour" when position is reached (default: "140")"
python.typing_counter.warn_colour = "color for warn after specified number of chars (default: "red")"
python.typing_counter.warn_command = "to activate a display beep use: $beep (default: "")"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed after message (default: "darkgray")"
python.urlserver.color_in_msg = "color for urls displayed inside irc message: it is a number (irc color) between 00 and 15 (see doc for a list of irc colors) (default: "")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.display_urls_in_msg = "add shorten url next to the original url (only in IRC messages) (useful for urlserver behind relay/irc) (default: "off")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (note: content is evaluated, see /help eval) (default: "")"
python.urlserver.http_auth_redirect = "require the login/password (if option "http_auth" is set) for URLs redirections (default: "on")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_open_in_new_page = "open links in new pages/tabs (default: "on")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_filtered = "shorten URLs in filtered messages (with /filter) (default: "off")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
