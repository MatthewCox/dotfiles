#
# weechat -- plugins.conf
#

[var]
fifo.fifo = "on"
guile.check_license = "on"
lua.check_license = "on"
perl.beep.beep_command_dcc = "$bell"
perl.beep.beep_command_highlight = "$bell"
perl.beep.beep_command_pv = "$bell"
perl.beep.beep_command_timeout = "30000"
perl.beep.beep_dcc = "on"
perl.beep.beep_highlight = "on"
perl.beep.beep_highlight_blacklist = "off"
perl.beep.beep_highlight_whitelist = "off"
perl.beep.beep_pv = "on"
perl.beep.beep_pv_blacklist = "off"
perl.beep.beep_pv_whitelist = "off"
perl.beep.beep_trigger_highlight = ""
perl.beep.beep_trigger_pv = ""
perl.beep.bell_always = ""
perl.beep.blacklist_nicks = ""
perl.beep.whitelist_channels = ""
perl.beep.whitelist_nicks = ""
perl.check_license = "on"
perl.colorize_lines.avail_buffer = "all"
perl.colorize_lines.blacklist_buffers = ""
perl.colorize_lines.blacklist_channels = ""
perl.colorize_lines.buffer_autoset = "off"
perl.colorize_lines.buffers = "all"
perl.colorize_lines.chat = "on"
perl.colorize_lines.highlight = "on"
perl.colorize_lines.hotlist_max_level_nicks_add = "off"
perl.colorize_lines.lines = "on"
perl.colorize_lines.look_highlight = "off"
perl.colorize_lines.look_highlight_regex = "off"
perl.colorize_lines.nicks = ""
perl.colorize_lines.own_lines = "only"
perl.colorize_lines.shuffle = "off"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.strmon.default_bg_color = "#fff0d7"
perl.strmon.default_chanel_color = "brown"
perl.strmon.default_fg_color = "black"
perl.strmon.default_nick_color = "blue"
perl.strmon.default_picture = "default.png"
perl.strmon.default_sound = "default.ogg"
perl.strmon.filternicks = ""
perl.strmon.filtertags = "irc_join,irc_part,irc_quit,away_info"
perl.strmon.globalmode = "normal"
perl.strmon.highlights = "on:normal"
perl.strmon.monitorbuf = ""
perl.strmon.monitornicks = "bidbot:normal"
perl.strmon.monitortags = "notify_private:normal"
perl.strmon.notifo_secret = "nosecret"
perl.strmon.notifo_user = "nouser"
perl.strmon.notifyport = "9867"
perl.strmon.usedaemon = "off"
perl.strmon.usenotifo = "off"
perl.sysinfo.baritems = "memory"
perl.sysinfo.color = "default"
perl.sysinfo.nic = ""
perl.sysinfo.nicname = ""
perl.sysinfo.refresh = "0"
perl.sysinfo.showbattery = "off"
perl.sysinfo.showcpu = "on"
perl.sysinfo.showdiskusage = "on"
perl.sysinfo.showdistro = "on"
perl.sysinfo.showhostname = "on"
perl.sysinfo.showloadaverage = "on"
perl.sysinfo.showmemoryusage = "on"
perl.sysinfo.shownetworktraffic = "off"
perl.sysinfo.showos = "on"
perl.sysinfo.showprocesses = "on"
perl.sysinfo.showuptime = "on"
perl.sysinfo.showusers = "on"
perl.sysinfo.text_battery = "Battery: "
perl.sysinfo.text_color = "default"
perl.sysinfo.text_cpu = "CPU: "
perl.sysinfo.text_diskusage = "Disk Usage: "
perl.sysinfo.text_distro = "Distro: "
perl.sysinfo.text_dummy = "-"
perl.sysinfo.text_hostname = "Host: "
perl.sysinfo.text_loadaverage = "Load Average: "
perl.sysinfo.text_memoryusage = "Memory Usage: "
perl.sysinfo.text_network = "Network: "
perl.sysinfo.text_os = "OS: "
perl.sysinfo.text_processes = "Processes: "
perl.sysinfo.text_uptime = "Uptime: "
perl.sysinfo.text_users = "Users: "
perl.sysinfo.useshorthostname = "on"
perl.topicsed.color_message = "green"
perl.topicsed.message = "edit Topic: "
python.autojoin.autosave = "on"
python.check_license = "on"
python.colorize_nicks.blacklist_channels = ""
python.colorize_nicks.blacklist_nicks = "so,root"
python.colorize_nicks.colorize_input = "off"
python.colorize_nicks.greedy_matching = "on"
python.colorize_nicks.ignore_tags = ""
python.colorize_nicks.min_nick_length = "2"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.update_notifier.color_countdown = "red"
python.update_notifier.color_default = "default"
python.update_notifier.git_compile_location = ""
python.update_notifier.git_pull = "false"
python.update_notifier.next_stable_text = "%d day(s) left to version %s"
python.update_notifier.start_countdown = "10"
python.update_notifier.update_text = "New devel version available"
python.update_notifier.update_text_stable = "New stable version %s available"
python.update_notifier.uses_devel = "false"
python.update_notifier.uses_git = "false"
python.urlbar.ignore = "grep"
python.urlbar.remember_amount = "25"
python.urlbar.show_buffername = "on"
python.urlbar.show_index = "on"
python.urlbar.show_nick = "on"
python.urlbar.show_timestamp = "on"
python.urlbar.time_format = "%H:%M"
python.urlbar.use_popup = "off"
python.urlbar.visible_amount = "5"
python.urlbar.visible_seconds = "5"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = "Tyranic-Moron:wH1T1LlRu"
python.urlserver.http_auth_redirect = "on"
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = "tyranicmoron.uk"
python.urlserver.http_hostname_display = ""
python.urlserver.http_port = "41236"
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"
python.weetweet.alt_rt_style = "off"
python.weetweet.auth_complete = "on"
python.weetweet.home_replies = "off"
python.weetweet.last_id = "621717367136088064"
python.weetweet.oauth_secret = "TqYMVMZIIoZwkb3u7PRYcV19GeA033YsvjbKJqs63vL8z"
python.weetweet.oauth_token = "220750843-bgJqnSLuulyNaAVGas8UEPQS4lZfg5xhOHDNCdXO"
python.weetweet.print_id = "on"
python.weetweet.screen_name = "tyranicmoron"
python.weetweet.tweet_nicks = "on"
ruby.check_license = "on"
tcl.check_license = "on"

[desc]
perl.beep.beep_command_dcc = "command for beep on dcc, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_highlight = "command for beep on highlight, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_pv = "command for beep on private message, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_timeout = "timeout for command run (in milliseconds, 0 = never kill (not recommended)) (default: "30000")"
perl.beep.beep_dcc = "beep on dcc (default: "on")"
perl.beep.beep_highlight = "beep on highlight (default: "on")"
perl.beep.beep_highlight_blacklist = "turn blacklist for highlights on or off (default: "off")"
perl.beep.beep_highlight_whitelist = "turn whitelist for highlights on or off (default: "off")"
perl.beep.beep_pv = "beep on private message (default: "on")"
perl.beep.beep_pv_blacklist = "turn blacklist for private messages on or off (default: "off")"
perl.beep.beep_pv_whitelist = "turn whitelist for private messages on or off (default: "off")"
perl.beep.beep_trigger_highlight = "word that will trigger execution of beep_command_highlight (if empty, anything will trigger) (default: "")"
perl.beep.beep_trigger_pv = "word that will trigger execution of beep_command_pv (it empty, anything will trigger) (default: "")"
perl.beep.bell_always = "use $bell on private messages and/or highlights regardless of trigger and whitelist settings (example: "pv,highlight") (default: "")"
perl.beep.blacklist_nicks = "comma-separated list of "server.nick": if not empty, these nicks will not be able to trigger execution of commands. Cannot be used in conjuction with whitelist (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.beep.whitelist_channels = "comma-separated list of "server.#channel": if not empty, only these channels will trigger execution of commands (example: "freenode.#weechat,freenode.#channel2") (default: "")"
perl.beep.whitelist_nicks = "comma-separated list of "server.nick": if not empty, only these nicks will trigger execution of commands (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.colorize_lines.avail_buffer = "messages will be colored in buffer (all = all buffers, channel = channel buffers, query = query buffers (default: all "
perl.colorize_lines.blacklist_buffers = "comma-separated list of channels to be ignored (e.g. freenode.#weechat,*.#python)"
perl.colorize_lines.blacklist_channels = "comma separated list with channelname. Channels in this list will be completely ignored. (e.g.: freenode.#weechat,freenode.#weechat-fr). This option has highest priority!"
perl.colorize_lines.buffer_autoset = "toggle highlight color in chat area for value in "buffer_autoset.*.highlight_words_add" (default: off)"
perl.colorize_lines.buffers = "buffer type affected by the script (all/channel/query, default: all)"
perl.colorize_lines.chat = "colors text in chat area with according nick color (default: on)"
perl.colorize_lines.highlight = "highlight message will be fully highlighted in chat area ("on" = only messages from your buddies will be mind (using "plugins.var.perl.colorize_lines.nicks); "off" = message will not be highlighted; "always" = a highlight will always color the whole message (default: on)"
perl.colorize_lines.hotlist_max_level_nicks_add = "toggle highlight for hotlist (default: off)"
perl.colorize_lines.lines = "apply nickname color to the lines (off/on/nicks). the latter will limit highlighting to nicknames in option 'nicks'"
perl.colorize_lines.look_highlight = "toggle highlight color in chat area for value in option "weechat.look.highlight" (default: off)"
perl.colorize_lines.look_highlight_regex = "toggle highlight color in chat area for value in option "weechat.look.highlight_regex" (default: off)"
perl.colorize_lines.nicks = "comma separated list with nicknames. Only messages from nicks in this list will be colorized. (e.g.: freenode.nils_2,freenode.flashcode,freenode.weebot). You can use "*" as a wildcard (e.g.: *.nils_* to match all "nils_" on all servers). Also a file with nicks is allowed. The filename in option has to start with "/" (e.g.: /buddylist.txt). The format has to be, one nick each line with <servername>.<nickname>"
perl.colorize_lines.own_lines = "messages written by your own will be colored. color from "weechat.color.chat_nick_self" will be used. If you only want to color your lines, use value "only" (default: off)"
perl.colorize_lines.shuffle = "toggle shuffle color mode for chat area (you don't want this, believe me!) (default: off)"
perl.sysinfo.baritems = "comma separated list with name(s) of systeminformation to be displayed in a bar"
perl.sysinfo.color = "color for optionsname"
perl.sysinfo.nic = "comma separated list to specify your NIC interface name(s) (wlan0,eth0,etc)"
perl.sysinfo.nicname = "comma separated list with name(s) for interface(s) (wireless,cable,etc)"
perl.sysinfo.refresh = "refresh rate in seconds for info-bar (0 means off)"
perl.sysinfo.text_color = "text color for results"
perl.sysinfo.text_dummy = "separator between different options"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed after message (default: "darkgray")"
python.urlserver.color_in_msg = "color for urls displayed inside irc message: it is a number (irc color) between 00 and 15 (see doc for a list of irc colors) (default: "")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.display_urls_in_msg = "add shorten url next to the original url (only in IRC messages) (useful for urlserver behind relay/irc) (default: "off")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (note: content is evaluated, see /help eval) (default: "")"
python.urlserver.http_auth_redirect = "require the login/password (if option "http_auth" is set) for URLs redirections (default: "on")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
